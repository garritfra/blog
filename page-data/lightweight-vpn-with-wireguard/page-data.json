{"componentChunkName":"component---node-modules-gatsby-theme-blog-core-src-templates-post-query-js","path":"/lightweight-vpn-with-wireguard/","result":{"data":{"site":{"siteMetadata":{"title":"Garrits Blog","social":[{"name":"github","url":"https://github.com/garritfra"},{"name":"linkedin","url":"https://linkedin.com/in/garrit-franke-0558b1172"}]}},"blogPost":{"__typename":"MdxBlogPost","id":"16753941-0118-5f9b-882c-de21762e74e5","excerpt":"This blog post has been taken over from my  collection of \"Today I Learned\" articles . You can easily set up a private network of your…","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Quick Tip! Setting up a lightweight Server-Client VPN with wireguard\",\n  \"date\": \"2020-08-19T00:00:00.000Z\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"This blog post has been taken over from my \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://garrit.xyz/til\"\n  }), \"collection of \\u201CToday I Learned\\u201D articles\"), \".\"), mdx(\"p\", null, \"You can easily set up a private network of your devices. This way you can \\u201Ctalk\\u201D to your phone, raspberry pi etc. over an \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"encrypted\"), \" network, with simple IP-addresses.\"), mdx(\"p\", null, mdx(\"img\", _extends({\n    parentName: \"p\"\n  }, {\n    \"src\": \"https://images.unsplash.com/photo-1505659903052-f379347d056f?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=2550&q=80\",\n    \"alt\": null\n  }))), mdx(\"p\", null, \"Firstly, install wireguard on all of your systems. Simply install the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"wireguard\"), \" package from your package manager respectively. Check out \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.wireguard.com/install/\"\n  }), \"the official installation guide\"), \" if you can\\u2019t find the package. If you\\u2019re on debian, try \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://wiki.debian.org/WireGuard?action=show&redirect=Wireguard\"\n  }), \"this\"), \" guide. There\\u2019s also an app for Android, iOS and MacOS.\"), mdx(\"p\", null, \"Every participent (Client and server) needs a key-pair. To generate this, run this command first on the server, and on all clients:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"wg genkey | tee wg-private.key | wg pubkey > wg-public.key\\n\")), mdx(\"p\", null, \"It might make sense to do this as root. This way you don\\u2019t have to type \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"sudo\"), \" with every command.\"), mdx(\"h2\", {\n    \"id\": \"server-configuration\"\n  }, \"Server Configuration\"), mdx(\"p\", null, \"You will need to create a configuration for the server. Save this template at \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/etc/wireguard/wg0.conf\"), \", and replace the fields where needed:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-conf\"\n  }), \"[Interface]\\nPrivateKey = <Server private key from wg-private.key>\\nAddress = 10.0.0.1/24 # IP Address of the server. Using this IP Address, you can assign IPs ranging from 10.0.0.2 - 10.0.0.254 to your clients\\nListenPort = 51820 # This is the standard port for wireguard\\n\\n# The following fields will take care of routing\\nPostUp = iptables -A FORWARD -i %i -j ACCEPT; iptables -A FORWARD -o %i -j ACCEPT; iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE\\nPostDown = iptables -D FORWARD -i %i -j ACCEPT; iptables -D FORWARD -o %i -j ACCEPT; iptables -t nat -D POSTROUTING -o eth0 -j MASQUERADE\\n\\n# Laptop\\n[Peer]\\nPublicKey = <Public Key of Laptop Client>\\nAllowedIPs = 10.0.0.2/32 # The client will be reachable at this address\\n\\n# Android Phone\\n[Peer]\\nPublicKey = <Public Key of Phone Client>\\nAllowedIPs = 10.0.0.3/32\\n\\n# ...\\n\")), mdx(\"p\", null, \"Then run \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"wg-quick up wg0\"), \" to start the wireguard interface with the configuration from \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/etc/wireguard/wg0\"), \".\"), mdx(\"h2\", {\n    \"id\": \"setting-up-clients\"\n  }, \"Setting up clients\"), mdx(\"p\", null, \"Setting up clients is very similar to the server setup process. Generate a keypair on each client, save the following config to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/etc/wireguard/wg0.conf\"), \" and replace the nessessary fields:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-conf\"\n  }), \"[Interface]\\nPrivateKey = <Client Private Key from wg-private.key>\\nAddress = 10.0.0.2/32 # The fixed address of the client. Needs to be specified in the server config as well\\n\\n[Peer]\\nPublicKey = <Server Public key>\\nAllowedIPs = 10.0.0.0/24 # Routes all traffic in this subnet to the server. If you want to tunnel all traffic through the wireguard connection, use 0.0.0.0/0 here instead\\nEndpoint = <Public Server IP>:51820\\nPersistentKeepalive = 25 # Optional. Will ping the server every 25 seconds to remain connected.\\n\")), mdx(\"p\", null, \"On every client, run \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"wg-quick up wg0\"), \" to start the interface using the config at \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/etc/wireguard/wg0.conf\"), \".\"), mdx(\"p\", null, \"This whole proccess might be easier on GUIs like Android or MacOS.\"), mdx(\"p\", null, \"Now, try to ping your phone from your laptop:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"ping 10.0.0.3\\nPING 10.0.0.3 (10.0.0.3) 56(84) bytes of data.\\n64 bytes from 10.0.0.3: icmp_seq=1 ttl=64 time=5382 ms\\n64 bytes from 10.0.0.3: icmp_seq=2 ttl=64 time=4364 ms\\n\")), mdx(\"h3\", {\n    \"id\": \"references\"\n  }, \"References\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://www.wireguard.com/\"\n  }), \"Official Documentation\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://www.stavros.io/posts/how-to-configure-wireguard/\"\n  }), \"https://www.stavros.io/posts/how-to-configure-wireguard/\"))));\n}\n;\nMDXContent.isMDXComponent = true;","slug":"/lightweight-vpn-with-wireguard/","title":"Quick Tip! Setting up a lightweight Server-Client VPN with wireguard","tags":[],"keywords":[],"date":"August 19, 2020"},"previous":{"__typename":"MdxBlogPost","id":"17840239-0485-5aac-b18f-6460ac258f70","excerpt":"Nowadays, password managers are a necessity if you care even the slightest about your personal belongings on the interwebs. But think about…","slug":"/whom-do-you-trust/","title":"Whom do you trust?","date":"March 17, 2020"},"next":null},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"16753941-0118-5f9b-882c-de21762e74e5","previousId":"17840239-0485-5aac-b18f-6460ac258f70"}}}